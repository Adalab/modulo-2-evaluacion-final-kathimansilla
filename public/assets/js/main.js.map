{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n// ---> SECCIÓN QUERYSELECTOR\nconst ulMainElement = document.querySelector('.js__listMain');\nlet ulFavoritesElement = document.querySelector('.js__listFavorite');\nconst inputElement = document.querySelector('.js__inputElement');\nconst searchBntElement = document.querySelector('.js__searchBnt');\n\n// ---> ELEMENTOS CREADOS EN EL DOM\n  const newIconHeartCrack = document.createElement('i');\n  newIconHeartCrack.classList.add('fa-solid');\n  newIconHeartCrack.classList.add('fa-heart-crack');\n\n// ---> SECCIÓN VARIABLES GLOBALES\n//const urlAPI = 'https://api.disneyapi.dev/character?pageSize=50';\nconst urlAPI = 'https://dev.adalab.es/api/disney?pageSize=15';\nconst imgEmpty = 'https://via.placeholder.com/210x295/ffffff/555555/?text=Disney';\nlet isFavorite = '';\nlet backGroundFav = '';\nlet colorFav = '';\n\n// ---> SECCIÓN OBJETOS Y ARRAYS VACÍOS\nlet cardListApi = [];\nlet cardListFavorites = [];\n\n// ---> SECCIÓN FETCH\nfetch(urlAPI)\n  .then((response) => response.json())\n  .then((data) => {\n    console.log(data);\n    cardListApi = data.data;\n    renderCardList(cardListApi);\n  });\n\n// ---> SECCIÓN FUNCIONES\nconst renderOneCard = (card) => {\n  fillEmptyImgURL(card);\n  getFavoriteBackground(card);\n  getFavoriteColor(card);\n\n  const htmlCard = `<li class=\"card ${backGroundFav} js__cardElement\" id=\"${card._id}\">\n    <div class=\"card__imgContainer\">\n        <img\n            src=\"${card.imageUrl}\"\n            alt=\"${card.name}\"\n            class=\"characterImg\"\n        />\n    </div>\n    <div class=\"card__nameContainer js__nameContainer\">\n      <p class=\"${colorFav} js__name\">${card.name}</p>\n      <i class=\"fa-solid fa-heart ${colorFav} js__heartIcon\"></i>\n    </div>\n  </li>`;\n  return htmlCard;\n};\n\nconst fillEmptyImgURL = (card) => {\n  if (card.imageUrl === '' || card.imageUrl === undefined || card.imageUrl === null) {\n    card.imageUrl = 'imgEmpty';\n  };\n};\n\nconst getFavoriteBackground = (card) => {\n  isFavorite = cardListFavorites.find((favCard) => favCard._id === card._id);\n  backGroundFav = isFavorite;\n\n  if (isFavorite) {\n    backGroundFav = 'card__favorite';\n  }\n  else {\n    backGroundFav = '';\n  };\n  return backGroundFav;\n};\n\nconst getFavoriteColor = (card) => {\n  isFavorite = cardListFavorites.find((favCard) => favCard._id === card._id);\n  colorFav = isFavorite;\n\n  if (isFavorite) {\n    colorFav = 'white';\n  }\n  else {\n    colorFav = '';\n  };\n  return colorFav;\n};\n\nconst renderCardList = (dataList) => {\n  ulMainElement.innerHTML = '';\n  for (const card of dataList) {\n    ulMainElement.innerHTML += renderOneCard(card);  \n  };\n  addEventCard();\n};\n\nconst handleClickCard = (event) => {\n  const clickedCardId = parseInt(event.currentTarget.id);\n  const selectedCard = cardListApi.find((card) => card._id === clickedCardId);\n  const selectedCardIndex = cardListFavorites.findIndex((card) => card._id === clickedCardId);\n  \n  if (selectedCardIndex === -1) {\n    cardListFavorites.push(selectedCard);\n  }\n  else {\n    heartBackgroundDelete(clickedCardId);\n    cardListFavorites.splice(selectedCardIndex, 1);\n  }\n  localStorage.setItem(\"favoriteCard\", JSON.stringify(cardListFavorites));\n  renderFavoriteList();\n  renderCardList(cardListApi);\n};\n\nconst renderFavoriteList = () => {\n  ulFavoritesElement.innerHTML = '';\n  for (const favoriteCard of cardListFavorites) {\n    ulFavoritesElement.innerHTML += renderOneCard(favoriteCard);\n    const idCard = favoriteCard._id;\n    heartBackgroundAdd(idCard);\n  }\n}\n\nconst heartBackgroundAdd = (idCard) => {\n  const favoriteCard = document.getElementById(idCard);\n  const nameContainer = favoriteCard.querySelector('.js__nameContainer');\n  const iconHeart = nameContainer.querySelector('.js__heartIcon');\n  const name = nameContainer.querySelector('.js__name');\n  newIconHeartCrack.style.color = 'white'; \n  favoriteCard.style.backgroundColor = '#000000';\n  name.style.color = 'white';\n  nameContainer.appendChild(newIconHeartCrack);\n  nameContainer.removeChild(iconHeart);\n};\n\nconst heartBackgroundDelete = (idCard) => {\n  renderCardList(cardListApi);\n};\n\nconst handleClickSearch = (event) => {\n  event.preventDefault();\n  const inputValue = inputElement.value;\n  const filterList = cardListApi.filter((card) => card.name.toLowerCase().includes(inputValue.toLowerCase()));\n  renderCardList(filterList);\n};\n// ---> EVENTOS\n\nconst addEventCard = () => {\n  const cardElement = document.querySelectorAll('.js__cardElement');\n  for (const card of cardElement) {\n    card.addEventListener('click', handleClickCard);\n  };\n};\n\nsearchBntElement.addEventListener('click', handleClickSearch);\n\n// ---> LOCAL STORAGE DATA\n\nconst cardFavoritesLS = localStorage.getItem('favoriteCard');\nconst init = () => {\n  if (cardFavoritesLS) {\n    cardListFavorites = JSON.parse(cardFavoritesLS);\n    renderFavoriteList(cardListFavorites);\n  };\n};\ninit();"]}